void *memcpy(void *__restrict dest, const void *__restrict src, size_t n);
void *memset(void *s, int c, size_t n);
void *memmove(void * dest, const void * src, size_t n);
size_t strlen(const char *s);
double sin(double x);
double asin(double x);
double cos(double x);
double acos(double x);
double tan(double x);
double atan(double x);
double atan2(double x, double y);
double sinh(double x);
double asinh(double x);
double cosh(double x);
double acosh(double x);
double tanh(double x);
double atanh(double x);
double exp(double x);
double expm1(double x);
double exp2(double x);
double log(double x);
double log1p(double x);
double log10(double x);
double log2(double x);
double pow(double x, double y);
double sqrt(double x);
double round(double x);
double ceil(double x);
double floor(double x);
double fabs(double x);
double hypot(double x, double y);
double fmod(double n, double d);
double php_combined_lcg(void);
double _php_math_round(double x, int precision, int mode);
int abs(int n);
long long int llabs(long long int number);
int snprintf(char *__restrict s, size_t size, const char *__restrict format, ...);
NO_RETURN void qb_abort(const char *format, ...);
NO_RETURN void qb_abort_range_error(qb_interpreter_context *__restrict cxt, qb_memory_segment *segment, uint32_t index, uint32_t line_number);
void ZEND_FASTCALL qb_copy_argument(qb_interpreter_context *cxt, uint32_t argument_index);
void ZEND_FASTCALL qb_enlarge_segment(qb_interpreter_context *cxt, qb_memory_segment *segment, uint32_t desired_size);
void ZEND_FASTCALL qb_execute_function_call(qb_interpreter_context *cxt);
void ZEND_FASTCALL qb_finalize_function_call(qb_interpreter_context *cxt);
void ZEND_FASTCALL qb_initialize_function_call(qb_interpreter_context *cxt, zend_function *zfunc, uint32_t argument_count, uint32_t line_number);
void ZEND_FASTCALL qb_resync_argument(qb_interpreter_context *cxt, uint32_t argument_index);
void ZEND_FASTCALL qb_shrink_segment(qb_interpreter_context *__restrict cxt, qb_memory_segment *segment, uint32_t start_index, uint32_t count);
static int zend_finite(double n); 
static int zend_isinf(double n); 
static int zend_isnan(double n);
static void zend_bailout(void);
int php_write(const char *str, uint32_t str_length TSRMLS_DC);
void zend_timeout(int dummy);
void ZEND_FASTCALL qb_run_zend_extension_op(qb_interpreter_context *cxt, uint32_t zend_opcode, uint32_t line_number);
